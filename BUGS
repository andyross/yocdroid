BUGS:

+ No meaningful effort has been made to secure the installation.
  There are no known holes (it lives in /data/y, which is not writable
  to apps), but for the moment it's safest to assume that a clever
  downloaded app will be able to bootstrap local root access if
  yocdroid is installed.

+ There is no integration with the Android user/group IDs.  Everything
  but root appears as a numeric ID to the linux personality.

+ The installation process depends on a busybox tar and bzip2 to
  unpack the tarball.

+ yocdroid-run still needs busybox to get a list of local environment
  variables to clear.

+ The kernel initrd rootfs cannot be bind mounted.  So the yocdroid
  chroot has no access to it (it's read-only and non-persistent, of
  course, but sometimes it's nice to check what the init.rc said for
  the current system).  Maybe make copies of the files in root and
  bind mount subdirectories?

+ On a default android device, the nosuid flag for /data is inherited
  by the bind mount, so suid binaries won't work.  For remote access
  via a root shell that's fine, but local access from an app context
  requires a working su to bootstrap.  It also prevents many utilities
  (e.g. ping) from running correctly as non-root users.

+ AOSP "su" appears not to propagate failed result codes to the parent
  process, so the installer is fragile on those systems -- everything
  seems to work even if it doesn't.  Systems (e.g Cyanogenmod) using
  Superuser.apk's su binary do the right thing.  Wrap in another
  script I guess.

+ The Yocto atd daemon is installed but not started.  It's initscript
  lacks the proper header.

+ The "make start" target is hanging.  I think this is because the
  spawned yocdroid-mountd still has the adb stdin/stdout open.  Should
  be fixable with logwrapper.